model User {
  id             String              @id @default(uuid())
  username       String?             @unique
  password       String?
  firstName      String
  lastName       String
  email          String              @unique
  isActive       ClientIsActive
  createdBy      CreatedByStrategies @default(LOCAL)
  lang           Lang                @default(EN)
  accountType    AccountType         @default(CLIENT)
  userDetails    UserDetails?
  refreshTokens  RefreshToken[]
  creatorDetails CreatorDetails?

  @@map("users")
}

model UserDetails {
  id          Int          @id @default(autoincrement())
  userId      String       @unique
  profileImg  String?
  birthDate   DateTime?
  gender      Gender       @default(OTHER)
  createdAt   DateTime     @default(now())
  user        User         @relation(fields: [userId], references: [id])
  userAddress UserAddress?

  @@map("users_details")
}

model UserAddress {
  id            Int         @id @default(autoincrement())
  userDetailsId Int         @unique
  country       String?
  city          String?
  zipCode       Int?
  address1      String?
  address2      String?
  userDetails   UserDetails @relation(fields: [userDetailsId], references: [id])

  @@map("users_addresses")
}

model CreatorDetails {
  id          Int     @id @default(autoincrement())
  userId      String  @unique
  user        User    @relation(fields: [userId], references: [id])
  verificated Boolean @default(false)

  @@map("creator_details")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  userId    String
  ipAddress String
  createdAt DateTime @default(now())
  token     String
  user      User     @relation(fields: [userId], references: [id])

  @@map("refresh_tokens")
}

enum AccountType {
  CLIENT
  CREATOR
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum Lang {
  EN
  PL
}

enum ClientIsActive {
  IS_ACTIVE
  BLOCKED
  EMAIL_VERIFICATION
  PROFILE_NOT_COMPLETE
}

enum CreatedByStrategies {
  LOCAL
  FACEBOOk
  GOOGLE
}
